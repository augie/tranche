  * [Tranche3#Features Features]
  * [Tranche3#Design Design]


=Features=

These are the user features. Please also delineate any features you think may be implied by one of the features shown. *Bold* text denotes a minimum feature.

  * *Upload a file or directory of files (data set)*
    * *Default permissions: private*
    * *Default license: copyright*
  * *Modify at any time the permissions for which users or groups of users can view/download/modify a data set.*
  * *Modify at any time the license for use of a data set.*
  * *Ability to independently validate the downloaded content using common hashing algorithms.*
  * *Ability to cite the data set unambiguously along with a hash that can be used to validate its contents.*
  * *Backwards compatibility with the existing Tranche repository features and content*
  * *Java Web Start Swing-based GUI for uploading, modifying permissions/licensing*
  * *Upload/download via FTP*
  * Machine-readable license information.
  * HTTP uploading, downloading, modifying permissions/licensing, browsing, searching
  * Data set versioning
  * Delete a file or data set as long as it's not published
    * Requires concrete ability to establish when a data set is part of a published journal article.
  * Segment an existing data set for easier download.



=Design=

The internal software design. It should be robust, scalable, and meet all user features.

For simplicity's sake, the Tranche layer will not store any information. As requests come in, the Tranche layer will access the appropriate information either from a MySQL database (users, groups, permissions, possible licenses) or the iRODS data repository (data set info). 

Use only standard protocols for upload and download (FTP, HTTP).